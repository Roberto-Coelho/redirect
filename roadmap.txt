


            -> Entry --> Pontos de entradas que o webpack irá empacotar
Webpack =>  -> Output --> Resultado do empacotamento de módulos
            -> Loaders--> js e Json são o que é comumente entendido no webpack

                - Porém podemos atraves dos loaders colocar arquivos diferentes como .css

            -> Plugins--> São utilizados para extender o comportamento do webpack , gerando mais tarefas elaboradas 
            do que os loaders(que apenas transformam os modulos)

            - npm i  -D webpack webpack-cli

            const path = require('path');

module.exports ={
    entry : {
        main : './src/index.js',
        hello: './src/hello.js',
    },
    mode: 'development',

    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: 'bundle.[name].min.js'
    }
}

npm i -D style-loader css-loader

const path = require('path');

module.exports ={
    entry : {
        main : './src/index.js',
    },
    mode: 'development',
    module: {
        rules: [{
            test: /\.css$/,
            use: ['style-loader', 'css-loader'],
        }]
    } 
}

const MiniCssPlugin = require('mini-css-extract-plugin');

module.exports ={
    entry : {
        main : './src/index.js',
    },
    mode: 'development',
    module: {
        rules: [{
            test: /\.css$/,
            use: [MiniCssPlugin.loader, 'css-loader'],
        }]
    },
    plugins: [
       new MiniCssPlugin()
    ]
}